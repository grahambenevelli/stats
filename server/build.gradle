apply plugin: 'java'
apply plugin: 'application'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

defaultTasks 'clean', 'test'

// The main class of the application
mainClassName = 'com.grahamsfault.stats.server.NflStatsService'

repositories {
	mavenCentral()
}

project.ext {
	dropwizardVersion = '1.0.6'
}

dependencies {
	compile 'io.dropwizard:dropwizard-core:' + dropwizardVersion
	compile 'io.dropwizard:dropwizard-jdbi:' + dropwizardVersion
	compile 'io.dropwizard:dropwizard-db:' + dropwizardVersion
	compile 'io.dropwizard:dropwizard-migrations:' + dropwizardVersion
	compile group: 'com.google.guava', name: 'guava', version: '21.0'
	compile 'com.h2database:h2:1.4.191'
	compile 'mysql:mysql-connector-java:5.1.38'
	compile 'org.jsoup:jsoup:1.7.2'
	compile project(':nfl-client')
	compile project(':prediction-util')

	testCompile group: 'org.testng', name: 'testng', version: '6.3.1'
	testCompile group: 'org.mockito', name: 'mockito-all', version: '1.8.4'

}

// Configure the run task to start the Dropwizard service
run {
	args 'server', './src/dist/config/stats.yml'
}

task runServer(type: JavaExec) {
	group = "server"
	classpath = sourceSets.main.runtimeClasspath
	main = mainClassName
	args 'server', './src/dist/config/stats.yml'
}

task migrate(type: JavaExec) {
	group = "migration"
	description = "Migration for Stats Service"
	classpath = sourceSets.main.runtimeClasspath
	main = mainClassName
	args 'db', 'migrate', './src/dist/config/stats.yml'
}

task runETL(type: JavaExec) {
	group = "etl"
	description = "Run the full ETL to import, convert and save stats."
	classpath = sourceSets.main.runtimeClasspath
	main = mainClassName
	args 'run-etl', './src/dist/config/stats.yml'
}

task importPlayers(type: JavaExec) {
	group = "import"
	description = "Import the players that we have available stats on."
	classpath = sourceSets.main.runtimeClasspath
	main = mainClassName
	args 'import-players', './src/dist/config/stats.yml'
}

task importGameStats(type: JavaExec) {
	group = "import"
	description = "Import the stats on a per game level."
	classpath = sourceSets.main.runtimeClasspath
	main = mainClassName
	args 'import-game-stats', './src/dist/config/stats.yml'
}

task testPredictions(type: JavaExec) {
	group = "test"
	description = "Test a prediction algorithm."
	classpath = sourceSets.main.runtimeClasspath
	main = mainClassName
	args 'test-prediction', './src/dist/config/stats.yml'
}

test {
	useTestNG()
	exclude '**/*IntegrationTest.class'
}

task runIntegrationTests(type: Test) {
	useTestNG()
	include '**/*IntegrationTest.class'
}

